

import pandas as pd
import seaborn as sns 
import matplotlib.pyplot as plt  
%matplotlib inline

data = pd.read_csv('student_scores.csv.txt')

data.head()

data.dscribe()

data.info()

# A 2D graph drawn using seaborn library 
sns.jointplot(x = 'Hours',y = 'Scores',data = data)  

x = data.drop('Scores',axis=1)
y= data['Scores']

x.head()

y.head()

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,random_state=0)

len(x_train),len(x_test)

#Building linear regression model
from sklearn.linear_model import LinearRegression
model = LinearRegression()
model.fit(x_train,y_train)

#Plotting the regression line
a = model.coef_ *x+model.intercept_

# Plotting the test data
plt.scatter(x,y,color='red')
plt.plot(x,a)

model.score(x_test,y_test)

y_pred = model.predict(x_test)
print(y_pred)

#Comparing the actual and predicted values
output = pd.DataFrame()
output['Actual']=y_test
output['Predicted']=y_pred
output

#Test the model with different inputs
hours = [[9.25]]
pred = model.predict(hours)
print("predicted score  :",pred)

from sklearn.metrics import mean_absolute_error
print("Mean Absolute Error :",mean_absolute_error(y_test,y_pred))

from sklearn.metrics import mean_squared_error
import math
print("Mean Squarred Error ",(math.sqrt(mean_squared_error(y_test,y_pred))))